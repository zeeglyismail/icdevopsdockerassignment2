services:
  db:
    image: postgres:16
    container_name: dinesmart-postgres-db
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dinesmart-net
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
    container_name: dinesmart-backend
    restart: on-failure
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    depends_on:
      - db
    networks:
      - dinesmart-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dinesmart-frontend
    restart: on-failure
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - dinesmart-net


volumes:
  postgres_data:
networks:
  dinesmart-net:
